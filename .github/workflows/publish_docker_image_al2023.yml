name: Publish (AL2023)

on:
  workflow_dispatch:
    inputs:
      dockerImageTag:
        description: 'Semver tag with which you want to release (e.g. 1.4.0) the docker image. Will publish <ver>-al2023 (no "v" prefix).'
        required: true

env:
  REGISTRY: docker.io
  IMAGE_NAME: logicmonitor/lm-logs-k8s-fluentd

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Validate dockerImageTag (strict SemVer; no "v" prefix)
        shell: bash
        run: |
          TAG="${{ github.event.inputs.dockerImageTag }}"
          if [[ -z "$TAG" ]]; then
            echo "::error::dockerImageTag is required"; exit 1
          fi
          if ! [[ "$TAG" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "::error::Invalid dockerImageTag '$TAG'. Use SemVer like 1.2.3 (no 'v' prefix)."
            exit 1
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ vars.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      # Single tag: <version>-al2023 ; no 'latest', no 'v' prefix
      - name: Extract Docker metadata (AL2023)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=semver,pattern={{version}},value=${{ github.event.inputs.dockerImageTag }}
          flavor: |
            latest=false
            suffix=-al2023

      - name: Build and push Docker image (AL2023)
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./docker
          file: ./docker/Dockerfile.al2023
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
